{"version":3,"sources":["explosiveRepo/explosiveRepo.ts","App.tsx","index.tsx"],"names":["data","unNumber","technicalName","primaryClass","packingGroup","perItemWeight","weightUnit","description","ExplosiveRepository","Object","classCallCheck","this","createClass","key","value","map","d","desc","Optional","ofNullable","find","defaultFormState","numberPacks","numberItems","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","onChangeDescSelector","event","setState","target","onChangePacks","num","Number","parseInt","onChangeItems","onClickButton","state","getByDescription","ifPresent","ed","full","objectSpread","packs","items","explosives","concat","toConsumableArray","_this2","console","log","react_default","a","createElement","className","classes","app","appHeader","formRoot","index_es","container","spacing","alignItems","item","xs","descForm","descLabel","htmlFor","onChange","input","name","id","getDescriptions","label","type","InputLabelProps","shrink","margin","variant","color","button","onClick","Table_default","root","table","tableHead","headerCell","fe","un","techName","neq","numPacks","numItems","cell","Component","withStyles","theme","textAlign","background","borderWidth","border","padding","maxWidth","paddingTop","formControl","unit","flexGrow","minWidth","width","backgroundColor","minHeight","display","flexDirection","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d2df1ea0.chunk.js","sourcesContent":["import { Optional } from \"java8script\";\n\nexport interface ExplosiveData {\n    unNumber: string;\n    technicalName: string;\n    primaryClass: string;\n    packingGroup: string;\n    perItemWeight: number;\n    weightUnit: \"kg\" | \"g\";\n    description: string;\n}\nconst data: ExplosiveData[] = [\n    {\n        unNumber: \"UN0042\",\n        technicalName: \"BOOSTERS, without detonators\",\n        primaryClass: \"1.1D\",\n        packingGroup: \"II\",\n        perItemWeight: 0.453592,\n        weightUnit: \"kg\",\n        description: \"Rock Crusher 1lb\"\n    },\n    {\n        unNumber: \"UN0042\",\n        technicalName: \"BOOSTERS, without detonators\",\n        primaryClass: \"1.1D\",\n        packingGroup: \"II\",\n        perItemWeight: 0.907185,\n        weightUnit: \"kg\",\n        description: \"Rock Crusher 2lb\"\n    },\n    {\n        unNumber: \"UN0360\",\n        technicalName: \"DETONATOR ASSEMBLIES, NON ELECTRIC\",\n        primaryClass: \"1.1B\",\n        packingGroup: \"II\",\n        perItemWeight: 0.5,\n        weightUnit: \"g\",\n        description: \"In-Hole delay\"\n    }\n]\n\nexport class ExplosiveRepository {\n    public static getDescriptions(): string[] {\n        return data.map(d => d.description);\n    }\n\n    public static getByDescription(desc: string): Optional<ExplosiveData> {\n        return Optional.ofNullable(data.find(d => d.description === desc));\n    }\n}","import React, { Component, ChangeEvent } from 'react';\nimport './App.css';\nimport Table from '@material-ui/core/Table';\nimport { TableHead, TableRow, TableCell, Paper, TableBody, withStyles, Select, MenuItem, InputLabel, FormControl, TextField, Button, Grid, NativeSelect, Input, FormHelperText } from '@material-ui/core';\nimport { ExplosiveRepository, ExplosiveData } from './explosiveRepo/explosiveRepo';\nimport { Optional } from 'java8script';\n\nconst styles: any = (theme: any) => ({\n  app: {\n    textAlign: \"center\"\n  },\n  tableHead: {\n    background: \"#A0A0A0\",\n    borderWidth: 5,\n  },\n  cell: {\n    border: `1px solid`,\n    padding: 5,\n  },\n\n  headerCell: {\n    border: `2px solid`,\n    padding: 5,\n  },\n  table: {\n    maxWidth: 700,\n  },\n  descForm: {\n    paddingTop: 8\n  },\n  descLabel: {\n    paddingTop:10\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    maxWidth: 700,\n  },\n\n  formRoot: {\n    flexGrow: 1,\n    minWidth: 700,\n    alignItems: \"center\"\n  },\n  button: {\n    width: \"90%\"  \n  },\n\n  appHeader: {\n    backgroundColor: \"#F0F0F0\",\n    minHeight: '100vh',\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  }\n});\n\nfunction createRow(props: any, un: string, techName: string, primaryClass: string, packingGroup: string, neq: number, numPacks: number, numItems: number, desc: string) {\n  return (<TableRow>\n    <TableCell classes={{ root: props.classes.cell }} >{un}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{techName}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{primaryClass}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{packingGroup}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{neq}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{numPacks}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{numItems}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{desc}</TableCell>\n  </TableRow>);\n}\n\ninterface FullExplosiveData extends ExplosiveData {\n  packs: number;\n  items: number;\n}\n\ninterface State {\n  numberPacks: number;\n  numberItems: number;\n  description: string;\n  explosives: FullExplosiveData[];\n}\n\ninterface Props {\n  classes: any\n}\n\nconst defaultFormState = {\n  numberPacks: 0,\n  numberItems: 0,\n  description: \"<Select>\"\n}\nclass App extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...defaultFormState,\n      explosives: []\n    };\n  }\n\n  private onChangeDescSelector = (event: ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ description: event.target.value })\n  }\n\n  private onChangePacks = (event: ChangeEvent<HTMLInputElement>) => {\n    const num = Number.parseInt(event.target.value);\n    this.setState({ numberPacks: num ? num : 0 })\n  }\n\n  private onChangeItems = (event: ChangeEvent<HTMLInputElement>) => {\n    const num = Number.parseInt(event.target.value);\n    this.setState({ numberItems: num ? num : 0 })\n  }\n\n  private onClickButton = () => {\n    if (this.state.numberItems > 0 &&\n      this.state.numberPacks > 0 &&\n      this.state.description !== defaultFormState.description) {\n      const data: Optional<ExplosiveData> = ExplosiveRepository.getByDescription(this.state.description);\n      data.ifPresent(ed => {\n        const full: FullExplosiveData = { ...ed, packs: this.state.numberPacks, items: this.state.numberItems };\n        this.setState({\n          ...defaultFormState,\n          explosives: [...this.state.explosives, full]\n        })\n      })\n    }\n  }\n\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className={this.props.classes.app}>\n        <header className={this.props.classes.appHeader}>\n          <div className=\"hidden-print\">\n              <div className={this.props.classes.formRoot}>\n                <Grid container spacing={0} alignItems=\"center\">\n                  <Grid item xs={3}>\n                    <FormControl className={this.props.classes.descForm}>\n                      <InputLabel className={this.props.classes.descLabel} htmlFor=\"desc-native-helper\">Description</InputLabel>\n                      <NativeSelect\n                        value={this.state.description}\n                        onChange={this.onChangeDescSelector}\n                        input={<Input name=\"desc\" id=\"desc-native-helper\" />}\n                      >\n                        <option value={defaultFormState.description}>{defaultFormState.description}</option>\n                        {ExplosiveRepository.getDescriptions()\n                        .map(d => <option value={d}>{d}</option>)}\n                      </NativeSelect>\n                    </FormControl>\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      id=\"standard-number\"\n                      label=\"Number of Packs\"\n                      value={this.state.numberPacks}\n                      onChange={this.onChangePacks}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      id=\"standard-number2\"\n                      label=\"Number of Items\"\n                      value={this.state.numberItems}\n                      onChange={this.onChangeItems}\n                      type=\"number\"\n                      InputLabelProps={{\n                        shrink: true,\n                      }}\n                      margin=\"normal\"\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <Button variant=\"contained\" color=\"primary\" className={this.props.classes.button} onClick={this.onClickButton}>\n                      Add\n                    </Button>\n                  </Grid>\n                </Grid>\n              </div>\n          </div>\n          <Paper>\n            <Table classes={{ root: this.props.classes.table }}>\n              <TableHead classes={{ root: this.props.classes.tableHead }}>\n                <TableRow>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >UN Number</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Technical Name</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Primary Class</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Packing Group</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Total Quantity NEQ (KG)</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Number of Packages</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Number of Items</TableCell>\n                  <TableCell classes={{ root: this.props.classes.headerCell }} >Description</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.explosives.map(fe => createRow(this.props, fe.unNumber, fe.technicalName, fe.primaryClass, fe.packingGroup, fe.perItemWeight * fe.items, fe.packs, fe.items, fe.description))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}