{"version":3,"sources":["explosiveRepo/explosiveRepo.ts","App.tsx","index.tsx"],"names":["data","unNumber","technicalName","primaryClass","packingGroup","perItemWeight","weightUnit","description","ExplosiveRepository","Object","classCallCheck","this","createClass","key","value","map","d","desc","Optional","ofNullable","find","defaultFormState","numberPacks","numberItems","App","props","_this","possibleConstructorReturn","getPrototypeOf","call","onChangeDescSelector","event","setState","target","onChangePacks","num","Number","parseInt","onChangeItems","onClickButton","state","getByDescription","ifPresent","ed","full","objectSpread","packs","items","explosives","concat","toConsumableArray","_this2","console","log","react_default","a","createElement","className","index_es","classes","formControl","htmlFor","onChange","inputProps","name","id","getDescriptions","label","type","InputLabelProps","shrink","margin","onClick","Table_default","root","table","tableHead","cell","fe","un","techName","neq","numPacks","numItems","Component","withStyles","theme","width","marginTop","spacing","unit","overflowX","background","fontSize","borderWidth","border","padding","maxWidth","minWidth","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.4d83342b.chunk.js","sourcesContent":["import { Optional } from \"java8script\";\n\nexport interface ExplosiveData {\n    unNumber: string;\n    technicalName: string;\n    primaryClass: string;\n    packingGroup: string;\n    perItemWeight: number;\n    weightUnit: \"kg\" | \"g\";\n    description: string;\n}\nconst data: ExplosiveData[] = [\n    {\n        unNumber: \"UN0042\",\n        technicalName: \"BOOSTERS, without detonators\",\n        primaryClass: \"1.1D\",\n        packingGroup: \"II\",\n        perItemWeight: 0.453592,\n        weightUnit: \"kg\",\n        description: \"Rock Crusher 1lb\"\n    },\n    {\n        unNumber: \"UN0042\",\n        technicalName: \"BOOSTERS, without detonators\",\n        primaryClass: \"1.1D\",\n        packingGroup: \"II\",\n        perItemWeight: 0.907185,\n        weightUnit: \"kg\",\n        description: \"Rock Crusher 2lb\"\n    },\n    {\n        unNumber: \"UN0360\",\n        technicalName: \"DETONATOR ASSEMBLIES, NON ELECTRIC\",\n        primaryClass: \"1.1B\",\n        packingGroup: \"II\",\n        perItemWeight: 0.5,\n        weightUnit: \"g\",\n        description: \"In-Hole delay\"\n    }\n]\n\nexport class ExplosiveRepository {\n    public static getDescriptions(): string[] {\n        return data.map(d => d.description);\n    }\n\n    public static getByDescription(desc: string): Optional<ExplosiveData> {\n        return Optional.ofNullable(data.find(d => d.description === desc));\n    }\n}","import React, { Component, ChangeEvent } from 'react';\nimport './App.css';\nimport Table from '@material-ui/core/Table';\nimport { TableHead, TableRow, TableCell, Paper, TableBody, withStyles, Select, MenuItem, InputLabel, FormControl, TextField, Button } from '@material-ui/core';\nimport { ExplosiveRepository, ExplosiveData } from './explosiveRepo/explosiveRepo';\nimport { Optional } from 'java8script';\n\nconst styles: any = (theme: any) => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n    overflowX: 'auto',\n    background: \"red\",\n    fontSize: 50\n  },\n  tableHead: {\n    background: \"cyan\",\n    borderWidth: 5,\n  },\n  cell: {\n    border: `1px solid`,\n    padding: 5,\n  },\n  table: {\n    maxWidth: 700,\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120,\n  },\n});\n\nfunction createRow(props: any, un: string, techName: string, primaryClass: string, packingGroup: string, neq: number, numPacks: number, numItems: number, desc: string) {\n  return (<TableRow>\n    <TableCell classes={{ root: props.classes.cell }} >{un}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{techName}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{primaryClass}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{packingGroup}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{neq}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{numPacks}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{numItems}</TableCell>\n    <TableCell classes={{ root: props.classes.cell }} >{desc}</TableCell>\n  </TableRow>);\n}\n\ninterface FullExplosiveData extends ExplosiveData {\n  packs: number;\n  items: number;\n}\n\ninterface State {\n  numberPacks: number;\n  numberItems: number;\n  description: string;\n  explosives: FullExplosiveData[];\n}\n\ninterface Props {\n  classes: any\n}\n\nconst defaultFormState = {\n  numberPacks: 0,\n  numberItems: 0,\n  description: \"\"\n}\nclass App extends Component<Props, State> {\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      ...defaultFormState,\n      explosives: []\n    };\n  }\n\n  private onChangeDescSelector = (event: ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ description: event.target.value })\n  }\n\n  private onChangePacks = (event: ChangeEvent<HTMLInputElement>) => {\n    const num = Number.parseInt(event.target.value);\n    this.setState({ numberPacks: num ? num : 0 })\n  }\n\n  private onChangeItems = (event: ChangeEvent<HTMLInputElement>) => {\n    const num = Number.parseInt(event.target.value);\n    this.setState({ numberItems: num ? num : 0 })\n  }\n\n  private onClickButton = () => {\n    if (this.state.numberItems > 0 &&\n      this.state.numberPacks > 0 &&\n      this.state.description !== \"\") {\n      const data: Optional<ExplosiveData> = ExplosiveRepository.getByDescription(this.state.description);\n      data.ifPresent(ed => {\n        const full: FullExplosiveData = { ...ed, packs: this.state.numberPacks, items: this.state.numberItems };\n        this.setState({\n          ...defaultFormState,\n          explosives: [...this.state.explosives, full]\n        })\n      })\n    }\n  }\n\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div className=\"hidden-print\">\n            <FormControl className={this.props.classes.formControl}>\n              <InputLabel htmlFor=\"'desc-simple\">Description</InputLabel>\n              <Select\n                value={this.state.description}\n                onChange={this.onChangeDescSelector}\n                inputProps={{\n                  name: 'Description',\n                  id: 'desc-simple',\n                }}\n              >\n                {ExplosiveRepository.getDescriptions()\n                  .map(d => <MenuItem value={d}>{d}</MenuItem>)\n                }\n              </Select>\n              <TextField\n                id=\"standard-number\"\n                label=\"Number of Packs\"\n                value={this.state.numberPacks}\n                onChange={this.onChangePacks}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                margin=\"normal\"\n              />\n              <TextField\n                id=\"standard-number2\"\n                label=\"Number of Items\"\n                value={this.state.numberItems}\n                onChange={this.onChangeItems}\n                type=\"number\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                margin=\"normal\"\n              />\n              <Button onClick={this.onClickButton}>\n                Add\n          </Button>\n            </FormControl>\n          </div>\n          <Paper>\n            <Table classes={{ root: this.props.classes.table }}>\n              <TableHead classes={{ root: this.props.classes.tableHead }}>\n                <TableRow>\n                  <TableCell classes={{ root: this.props.classes.cell }} >UN Number</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Technical Name</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Primary Class</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Packing Group</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Total Quantity NEQ (KG)</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Number of Packages</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Number of Items</TableCell>\n                  <TableCell classes={{ root: this.props.classes.cell }} >Description</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.explosives.map(fe => createRow(this.props, fe.unNumber, fe.technicalName, fe.primaryClass, fe.packingGroup, fe.perItemWeight * fe.items, fe.packs, fe.items, fe.description))}\n              </TableBody>\n            </Table>\n          </Paper>\n        </header>\n      </div >\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}